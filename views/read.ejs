<!DOCTYPE  html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <meta name="description" content="Built with jdoodle.ai - <%= manga.title %> <%= chapter.title %> - MangaVerse">
  <meta property="og:title" content="<%= manga.title %> <%= chapter.title %> - MangaVerse">
  <meta property="og:description" content="Built with jdoodle.ai - Read <%= manga.title %> <%= chapter.title %> for free">
  <meta property="og:image" content="https://images.unsplash.com/photo-1602416222941-a72a356dab04?ixid=M3w3MjUzNDh8MHwxfHNlYXJjaHwxfHxtYW5nYSUyMGNvdmVycyUyMGFuaW1lfGVufDB8fHx8MTc0NDM1ODc5OXww&ixlib=rb-4.0.3&fit=fillmax&h=800&w=1200">
  <title><%= manga.title %> - <%= chapter.title %> | MangaVerse</title>
  <link rel="stylesheet" href="/css/style.css" />
  <link href="https://fonts.googleapis.com/css2?family=Anton&family=DM+Sans&family=Righteous&family=Quicksand:wght@400;600&display=swap" rel="stylesheet">
  <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <style>
    body {
      overflow-x: hidden;
      background-color: #0a0a0a;
    }

    .reader-navbar {
      background-color: rgba(26, 26, 26, 0.95);
      backdrop-filter: blur(10px);
      padding: 0.5rem 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky;
      top: 0;
      z-index: 1000;
    }

    .reader-navbar .logo {
      font-size: 1.2rem;
    }

    .reader-breadcrumb {
      flex: 1;
      margin-left: 1rem;
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.9rem;
    }

    .reader-breadcrumb a {
      color: #fff;
      text-decoration: none;
    }

    .reader-breadcrumb a:hover {
      color: #f94e4e;
    }

    .reader-controls {
      display: flex;
      gap: 0.5rem;
    }
    
    .reader-btn {
      background: rgba(255, 255, 255, 0.1);
      border: none;
      color: #fff;
      font-size: 0.8rem;
      border-radius: 4px;
      padding: 0.4rem 0.8rem;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .reader-btn:hover {
      background: rgba(249, 78, 78, 0.3);
    }

    .reader-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    .reader-container {
      max-width: 900px;
      margin: 0 auto;
      padding: 1rem;
    }

    .chapter-title {
      font-size: 1.5rem;
      margin-bottom: 2rem;
      text-align: center;
      font-family: 'Quicksand', sans-serif;
      font-weight: 600;
      color: #f94e4e;
    }

    .manga-pages {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .manga-page {
      max-width: 100%;
      height: auto;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
      background-color: #fff;
      transition: transform 0.3s ease;
    }

    .manga-page:hover {
      transform: scale(1.02);
    }

    .manga-page img {
      width: 100%;
      height: auto;
      border-radius: 8px;
      display: block;
    }

    .page-loading {
      background-color: #222;
      height: 800px;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 8px;
    }

    .loader {
      width: 48px;
      height: 48px;
      border: 5px solid rgba(255, 255, 255, 0.3);
      border-bottom-color: #f94e4e;
      border-radius: 50%;
      display: inline-block;
      box-sizing: border-box;
      animation: rotation 1s linear infinite;
    }

    @keyframes rotation {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

    .error-message {
      color: #f94e4e;
      text-align: center;
      margin: 2rem 0;
    }

    .chapter-navigation {
      display: flex;
      justify-content: space-between;
      margin: 2rem 0;
      position: sticky;
      bottom: 1rem;
      background: rgba(26, 26, 26, 0.9);
      backdrop-filter: blur(10px);
      padding: 1rem;
      border-radius: 50px;
      max-width: 400px;
      margin-left: auto;
      margin-right: auto;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    .nav-btn {
      background-color: rgba(249, 78, 78, 0.8);
      border: none;
      color: white;
      padding: 0.6rem 1.2rem;
      border-radius: 50px;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      font-weight: bold;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.9rem;
    }

    .nav-btn:hover {
      background-color: rgba(249, 78, 78, 1);
      transform: translateY(-2px);
    }

    .nav-btn:disabled, .nav-btn.disabled {
      background-color: rgba(100, 100, 100, 0.5);
      cursor: not-allowed;
      transform: none;
    }

    .nav-btn.prev::before {
      content: "←";
    }

    .nav-btn.next::after {
      content: "→";
    }

    .back-to-info {
      display: block;
      text-align: center;
      margin: 2rem auto;
      background-color: rgba(255, 255, 255, 0.1);
      color: #fff;
      text-decoration: none;
      padding: 0.8rem 1.5rem;
      border-radius: 8px;
      width: fit-content;
      transition: all 0.3s ease;
    }

    .back-to-info:hover {
      background-color: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
    }

    .reading-mode-switch {
      display: flex;
      justify-content: center;
      margin: 1rem auto;
      gap: 0.5rem;
    }

    .mode-btn {
      background-color: rgba(255, 255, 255, 0.1);
      border: none;
      color: #fff;
      padding: 0.4rem 0.8rem;
      border-radius: 4px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .mode-btn.active {
      background-color: #f94e4e;
    }

    @media (max-width: 768px) {
      .reader-navbar {
        flex-wrap: wrap;
      }

      .reader-breadcrumb {
        order: 3;
        width: 100%;
        margin: 0.5rem 0 0;
        text-align: center;
      }

      .reader-container {
        padding: 0.5rem;
      }

      .chapter-navigation {
        max-width: 100%;
        border-radius: 0;
        bottom: 0;
        margin: 0;
        padding: 0.8rem;
      }

      .nav-btn {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
      }
    }
  </style>
</head>
<body>
  <nav class="reader-navbar">
    <div class="logo">
      <a href="/">
        <span class="logo-part-1">Manga</span><span class="logo-part-2">Verse</span>
      </a>
    </div>
    
    <div class="reader-breadcrumb">
      <a href="/">Home</a> &gt; 
      <a href="/truyen-tranh/<%= manga.slug %>"><%= manga.title %></a> &gt; 
      <%= chapter.title %>
    </div>
    
    <div class="reader-controls">
      <a href="/truyen-tranh/<%= manga.slug %>" class="reader-btn">Info</a>
    </div>
  </nav>
  
  <div class="reader-container">
    <h1 class="chapter-title"><%= chapter.title %></h1>
    
    <div class="reading-mode-switch">
      <button class="mode-btn active" data-mode="vertical">Vertical</button>
      <button class="mode-btn" data-mode="single">Single Page</button>
    </div>
    
    <div class="manga-pages" id="verticalReader">
      <% if (pages && pages.length > 0 && baseUrl) { %>
        <% pages.forEach((page, index) => { %>
          <div class="manga-page" data-index="<%= index + 1 %>">
            <div class="page-loading" id="loading-<%= index + 1 %>">
              <span class="loader"></span>
            </div>
            <img src="<%= baseUrl + page %>" alt="Page <%= index + 1 %>" loading="lazy"
                 onload="document.getElementById('loading-<%= index + 1 %>').style.display = 'none'"
                 onerror="handleImageError(this, <%= index + 1 %>)">
          </div>
        <% }); %>
      <% } else { %>
        <div class="error-message">
          <p>Unable to load chapter pages. The chapter may be unavailable or requires authentication.</p>
        </div>
      <% } %>
    </div>
    
    <div id="singlePageReader" style="display: none;">
      <div class="manga-page" id="currentPage">
        <div class="page-loading" id="single-loading">
          <span class="loader"></span>
        </div>
        <img id="singlePageImage" src="" alt="Current Page" 
             onload="document.getElementById('single-loading').style.display = 'none'"
             onerror="handleSingleImageError()">
      </div>
      
      <div class="chapter-navigation single-page-nav">
        <button class="nav-btn prev" id="prevPage" onclick="goToPreviousPage()">Prev</button>
        <span id="pageCounter">Page 1 / <%= pages.length %></span>
        <button class="nav-btn next" id="nextPage" onclick="goToNextPage()">Next</button>
      </div>
    </div>
    
    <div class="chapter-navigation">
      <% if (prevChapter) { %>
        <a href="/truyen-tranh/<%= manga.slug %>/<%= prevChapter.id %>" class="nav-btn prev">
          Chapter <%= prevChapter.number %>
        </a>
      <% } else { %>
        <button disabled class="nav-btn prev disabled">First Chapter</button>
      <% } %>
      
      <% if (nextChapter) { %>
        <a href="/truyen-tranh/<%= manga.slug %>/<%= nextChapter.id %>" class="nav-btn next">
          Chapter <%= nextChapter.number %>
        </a>
      <% } else { %>
        <button disabled class="nav-btn next disabled">Last Chapter</button>
      <% } %>
    </div>
    
    <a href="/truyen-tranh/<%= manga.slug %>" class="back-to-info">Back to Series Info</a>
  </div>
  
  <script>
    // Handle image loading errors
    function handleImageError(img, pageNumber) {
      img.parentNode.innerHTML = `
        <div class="error-message">
          <p>Failed to load page ${pageNumber}</p>
          <button onclick="retryLoadImage(this, '${img.src}', ${pageNumber})">Retry</button>
        </div>
      `;
    }
    
    function retryLoadImage(button, src, pageNumber) {
      const parent = button.parentNode.parentNode;
      parent.innerHTML = `
        <div class="page-loading" id="loading-retry-${pageNumber}">
          <span class="loader"></span>
        </div>
        <img src="${src}" alt="Page ${pageNumber}" loading="lazy"
             onload="document.getElementById('loading-retry-${pageNumber}').style.display = 'none'"
             onerror="handleImageError(this, ${pageNumber})">
      `;
    }
    
    // Single page reader functionality
    const pages = <%= JSON.stringify(pages) %>;
    const baseUrl = "<%= baseUrl %>";
    let currentPageIndex = 0;
    const totalPages = pages.length;
    
    function updateSinglePage() {
      const pageCounter = document.getElementById('pageCounter');
      const prevButton = document.getElementById('prevPage');
      const nextButton = document.getElementById('nextPage');
      const singlePageImage = document.getElementById('singlePageImage');
      
      // Update page counter
      pageCounter.textContent = `Page ${currentPageIndex + 1} / ${totalPages}`;
      
      // Update button states
      prevButton.disabled = currentPageIndex === 0;
      nextButton.disabled = currentPageIndex === totalPages - 1;
      
      // Update image
      document.getElementById('single-loading').style.display = 'flex';
      singlePageImage.src = baseUrl + pages[currentPageIndex];
    }
    
    function goToNextPage() {
      if (currentPageIndex < totalPages - 1) {
        currentPageIndex++;
        updateSinglePage();
      }
    }
    
    function goToPreviousPage() {
      if (currentPageIndex > 0) {
        currentPageIndex--;
        updateSinglePage();
      }
    }
    
    function handleSingleImageError() {
      const singlePageImage = document.getElementById('singlePageImage');
      singlePageImage.style.display = 'none';
      document.getElementById('single-loading').innerHTML = `
        <div class="error-message">
          <p>Failed to load page ${currentPageIndex + 1}</p>
          <button onclick="retrySinglePage()">Retry</button>
        </div>
      `;
    }
    
    function retrySinglePage() {
      const singlePageImage = document.getElementById('singlePageImage');
      singlePageImage.style.display = 'block';
      document.getElementById('single-loading').innerHTML = '<span class="loader"></span>';
      updateSinglePage();
    }
    
    // Reading mode switch
    document.addEventListener('DOMContentLoaded', function() {
      const modeButtons = document.querySelectorAll('.mode-btn');
      const verticalReader = document.getElementById('verticalReader');
      const singlePageReader = document.getElementById('singlePageReader');
      
      modeButtons.forEach(button => {
        button.addEventListener('click', function() {
          const mode = this.getAttribute('data-mode');
          
          // Update active button
          modeButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          
          // Switch reader mode
          if (mode === 'vertical') {
            verticalReader.style.display = 'flex';
            singlePageReader.style.display = 'none';
          } else {
            verticalReader.style.display = 'none';
            singlePageReader.style.display = 'block';
            
            // Initialize single page viewer if it's the first time
            if (!singlePageReader.initialized) {
              updateSinglePage();
              singlePageReader.initialized = true;
            }
          }
        });
      });
      
      // Keyboard navigation for single page mode
      document.addEventListener('keydown', function(e) {
        if (singlePageReader.style.display === 'block') {
          if (e.key === 'ArrowRight' || e.key === ' ') {
            goToNextPage();
          } else if (e.key === 'ArrowLeft') {
            goToPreviousPage();
          }
        }
      });
    });
  </script>
</body>
</html>
  